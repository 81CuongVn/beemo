"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[801],{5318:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var o=t(7378);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(t),d=a,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||r;return t?o.createElement(g,i(i({ref:n},p),{},{components:t})):o.createElement(g,i({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<r;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7791:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var o=t(5773),a=t(808),r=(t(7378),t(5318)),i=["components"],l={title:"Advanced"},s={unversionedId:"advanced",id:"advanced",isDocsHomePage:!1,title:"Advanced",description:"Some useful tips and advanced features on utilizing Beemo like a pro!",source:"@site/docs/advanced.md",sourceDirName:".",slug:"/advanced",permalink:"/docs/advanced",editUrl:"https://github.com/beemojs/beemo/edit/master/website/docs/advanced.md",version:"current",frontMatter:{title:"Advanced"},sidebar:"docs",previous:{title:"Workspaces",permalink:"/docs/workspaces"},next:{title:"Migrate to v2.0",permalink:"/docs/migration/2.0"}},c=[{value:"Local Beemo setup",id:"local-beemo-setup",children:[]},{value:"Ignoring configuration",id:"ignoring-configuration",children:[]},{value:"Editor integration",id:"editor-integration",children:[]},{value:"Glob expansion",id:"glob-expansion",children:[]},{value:"Parallel commands",id:"parallel-commands",children:[]},{value:"Custom settings",id:"custom-settings",children:[]},{value:"Branded tooling",id:"branded-tooling",children:[{value:"Does change",id:"does-change",children:[]},{value:"Does not change",id:"does-not-change",children:[]}]},{value:"CLI themes",id:"cli-themes",children:[]}],p={toc:c};function u(e){var n=e.components,t=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Some useful tips and advanced features on utilizing Beemo like a pro!"),(0,r.kt)("h2",{id:"local-beemo-setup"},"Local Beemo setup"),(0,r.kt)("p",null,"Beemo requires an external Node module (the configuration module) to run correctly, but technically,\nit can be setup locally to not require an external module. This is perfect for large applications,\nmonorepos, or for testing your configuration module itself!"),(0,r.kt)("p",null,"In your Beemo config, use ",(0,r.kt)("inlineCode",{parentName:"p"},"@local")," instead of the name of your configuration module. This will use\nthe current working directory (",(0,r.kt)("inlineCode",{parentName:"p"},"process.cwd()"),") instead of the Node module path."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title=".config/beemo.ts"',title:'".config/beemo.ts"'},"export default {\n    module: '@local',\n};\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"If your configuration module is using ",(0,r.kt)("a",{parentName:"p",href:"/docs/workspaces"},"workspaces")," (monorepo), you can target the\npackage name directly, assuming Yarn or Lerna have symlinked Node modules.")),(0,r.kt)("h2",{id:"ignoring-configuration"},"Ignoring configuration"),(0,r.kt)("p",null,"By default, Beemo generates local config files at runtime, all of which may constantly change based\non outside variables. These changes will clutter your commit history, so let's ignore them all\ntogether!"),(0,r.kt)("p",null,"Do so by adding file names to ",(0,r.kt)("inlineCode",{parentName:"p"},".gitignore")," (or another VCS) for each driver you have installed in\nyour configuration module. Be sure ",(0,r.kt)("inlineCode",{parentName:"p"},"config.cleanup")," is disabled in your ",(0,r.kt)("inlineCode",{parentName:"p"},"beemo")," config (is ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"\nby default)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"// .gitignore\n.eslintrc.js\nprettier.config.js\n")),(0,r.kt)("p",null,"With these changes, the local config files will persist after executing a driver, but will also be\nignored in your VCS. Pretty nice huh?"),(0,r.kt)("h2",{id:"editor-integration"},"Editor integration"),(0,r.kt)("p",null,"Some editors utilize the config files files for in-editor functionality (like ESLint and Prettier),\nbut if these config files are ignored (tip above), then the editor experience would be sub-par until\nthe user generated the files."),(0,r.kt)("p",null,"To work around this, we can define a ",(0,r.kt)("inlineCode",{parentName:"p"},"prepare")," script to create all config files, which runs after\nevery ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn install")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"npm install"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n    "scripts": {\n        "prepare": "beemo create-config --silent"\n    }\n}\n')),(0,r.kt)("h2",{id:"glob-expansion"},"Glob expansion"),(0,r.kt)("p",null,"Most scripts require ",(0,r.kt)("a",{parentName:"p",href:"http://tldp.org/LDP/abs/html/globbingref.html"},"Bash filename expansion")," to\nglob multiple filesystem paths, but this isn't entirely efficient or accurate, as Bash only supports\na subset of the RE specification, nor does it support wildcards like ",(0,r.kt)("inlineCode",{parentName:"p"},"**")," (recursive search)."),(0,r.kt)("p",null,"To work around this limitation, Beemo implements its own version of filename expansion using the\n",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/glob"},"glob package"),". Simply wrap your command line argument in quotes\nto use it!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# Before\nyarn beemo eslint ./packages/*/{src,tests}\n\n# After\nyarn beemo eslint "./packages/*/{src,tests}"\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This approach has an additional benefit of not cluttering ",(0,r.kt)("inlineCode",{parentName:"p"},"stdout"),".")),(0,r.kt)("p",null,"In some cases, a glob pattern can match too many files, and exceed the maximum size for arguments\npassed to a command. To work around this set ",(0,r.kt)("inlineCode",{parentName:"p"},"expandGlobs")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," in the Driver options. For\nthis to work correctly, the underlying tool must correctly handle the glob patterns you pass in."),(0,r.kt)("h2",{id:"parallel-commands"},"Parallel commands"),(0,r.kt)("p",null,"Multiple commands for the same driver can be run in parallel by passing one or many ",(0,r.kt)("inlineCode",{parentName:"p"},"//")," parallel\noperators. Each operator may include multiple arguments or options."),(0,r.kt)("p",null,"For example, if you'd like to run separate ESLint commands in different folders."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn beemo eslint --color // ./src --ext=.ts,.tsx // ./tests --report-unused-disable-directives\n\n# Would run 2 commands in parallel\neslint --color ./src --ext=.ts,.tsx\neslint --color ./tests --report-unused-disable-directives\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Parallel defined arguments are not accessible within the configuration file, as the file has\nalready been created using the initially passed non-parallel arguments. However, depending on the\ndriver, some argument may be available under ",(0,r.kt)("inlineCode",{parentName:"p"},"process.beemo.context.args"),".")),(0,r.kt)("h2",{id:"custom-settings"},"Custom settings"),(0,r.kt)("p",null,"Beemo supports custom project level configuration through the ",(0,r.kt)("inlineCode",{parentName:"p"},"settings")," property. A property which\naccepts an object of any key-value pair. This property is not used by Beemo itself, so is free from\nany possible collisions."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title=".config/beemo.ts"',title:'".config/beemo.ts"'},"export default {\n    module: '<config-module>',\n    settings: {\n        whateverYouWant: 'here',\n        coolRight: true,\n    },\n};\n")),(0,r.kt)("p",null,"These settings can then be accessed through the ",(0,r.kt)("a",{parentName:"p",href:"/docs/tool"},"tool instance"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"tool.config.settings.coolRight; // boolean\n")),(0,r.kt)("h2",{id:"branded-tooling"},"Branded tooling"),(0,r.kt)("p",null,"The Beemo command line and configuration can be renamed to offer a better and more immersive\nbranding experience, especially when used at a large company. To start, create a new executable in\nyour configuration module at ",(0,r.kt)("inlineCode",{parentName:"p"},"bin/<name>.js")," (name must be camel-case), with the following contents\n(which simply runs Beemo's console)."),(0,r.kt)("p",null,'In the upcoming examples, we will use "BMO" as the brand, but feel free to plug in whatever you\'d\nlike.'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"#!/usr/bin/env node\n\n// Name of your company, project, etc in a human-readable format\nprocess.env.BEEMO_BRAND_NAME = 'BMO';\n\n// Name of the command line binary in camel-case\nprocess.env.BEEMO_BRAND_BINARY = 'bmo';\n\n// NPM configuration module that houses shared configs and the binary itself\nprocess.env.BEEMO_CONFIG_MODULE = '@bmo/dev';\n\n// Custom documentation website to display in help output\nprocess.env.BEEMO_MANUAL_URL = 'https://custom/manual/url';\n\nrequire('@beemo/cli/bin');\n")),(0,r.kt)("p",null,"Be sure to reference your new executable in your configuration module's ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n    "bin": {\n        "bmo": "./bin/bmo.js"\n    }\n}\n')),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"BEEMO_CONFIG_MODULE")," is not defined in your custom binary (above), each consumer will need to\nmanually configure it."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title=".config/bmo.ts"',title:'".config/bmo.ts"'},"export default {\n    module: '@bmo/dev',\n};\n")),(0,r.kt)("h3",{id:"does-change"},"Does change"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Binary executable name and project title: ",(0,r.kt)("inlineCode",{parentName:"li"},"bmo run-driver babel")),(0,r.kt)("li",{parentName:"ul"},"Config file names: ",(0,r.kt)("inlineCode",{parentName:"li"},".config/bmo.js"),", ",(0,r.kt)("inlineCode",{parentName:"li"},".config/bmo/babel.js"),", etc"),(0,r.kt)("li",{parentName:"ul"},"Beemo process global: ",(0,r.kt)("inlineCode",{parentName:"li"},"process.bmo")),(0,r.kt)("li",{parentName:"ul"},"Debug namespace: ",(0,r.kt)("inlineCode",{parentName:"li"},"DEBUG=bmo:*"))),(0,r.kt)("h3",{id:"does-not-change"},"Does not change"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Driver and script package names: ",(0,r.kt)("inlineCode",{parentName:"li"},"@beemo/driver-babel"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"beemo-script-build"),", etc")),(0,r.kt)("h2",{id:"cli-themes"},"CLI themes"),(0,r.kt)("p",null,"Beemo is built on ",(0,r.kt)("a",{parentName:"p",href:"https://boostlib.dev/docs/cli#themes"},"Boost"),", a powerful dev tool framework,\nwhich provides the ability to theme the command line output (by changing important colors). To\nactivate a theme, pass a ",(0,r.kt)("inlineCode",{parentName:"p"},"BOOSTJS_CLI_THEME")," environment variable with the name of the theme."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"BOOSTJS_CLI_THEME=one-dark yarn beemo babel\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"View the list of available themes on the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/milesj/boost/tree/master/themes"},"official Boost repository"),".")))}u.isMDXComponent=!0}}]);