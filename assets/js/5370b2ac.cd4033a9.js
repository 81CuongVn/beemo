(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{102:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(n),d=r,m=b["".concat(o,".").concat(d)]||b[d]||u[d]||i;return n?a.a.createElement(m,c(c({ref:t},s),{},{components:n})):a.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},103:function(e,t,n){"use strict";function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}t.a=function(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}},104:function(e,t,n){"use strict";var r=n(0),a=n(105);t.a=function(){var e=Object(r.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},105:function(e,t,n){"use strict";var r=n(0),a=Object(r.createContext)(void 0);t.a=a},106:function(e,t,n){"use strict";var r=n(0),a=n.n(r),i=n(104),o=n(103),c=n(56),l=n.n(c);var s=37,p=39;t.a=function(e){var t=e.lazy,n=e.block,c=e.defaultValue,b=e.values,u=e.groupId,d=e.className,m=Object(i.a)(),f=m.tabGroupChoices,g=m.setTabGroupChoices,j=Object(r.useState)(c),y=j[0],O=j[1],v=r.Children.toArray(e.children),h=[];if(null!=u){var N=f[u];null!=N&&N!==y&&b.some((function(e){return e.value===N}))&&O(N)}var C=function(e){var t=e.target,n=h.indexOf(t),r=v[n].props.value;O(r),null!=u&&(g(u,r),setTimeout((function(){var e,n,r,a,i,o,c,s;(e=t.getBoundingClientRect(),n=e.top,r=e.left,a=e.bottom,i=e.right,o=window,c=o.innerHeight,s=o.innerWidth,n>=0&&i<=s&&a<=c&&r>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(l.a.tabItemActive),setTimeout((function(){return t.classList.remove(l.a.tabItemActive)}),2e3))}),150))},w=function(e){var t,n;switch(e.keyCode){case p:var r=h.indexOf(e.target)+1;n=h[r]||h[0];break;case s:var a=h.indexOf(e.target)-1;n=h[a]||h[h.length-1]}null===(t=n)||void 0===t||t.focus()};return a.a.createElement("div",{className:"tabs-container"},a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":n},d)},b.map((function(e){var t=e.value,n=e.label;return a.a.createElement("li",{role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,className:Object(o.a)("tabs__item",l.a.tabItem,{"tabs__item--active":y===t}),key:t,ref:function(e){return h.push(e)},onKeyDown:w,onFocus:C,onClick:C},n)}))),t?Object(r.cloneElement)(v.filter((function(e){return e.props.value===y}))[0],{className:"margin-vert--md"}):a.a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return Object(r.cloneElement)(e,{key:t,hidden:e.props.value!==y})}))))}},107:function(e,t,n){"use strict";var r=n(0),a=n.n(r);t.a=function(e){var t=e.children,n=e.hidden,r=e.className;return a.a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},86:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),i=(n(0),n(102)),o=n(106),c=n(107),l={title:"TypeScript driver",sidebar_label:"TypeScript"},s={unversionedId:"drivers/typescript",id:"drivers/typescript",isDocsHomePage:!1,title:"TypeScript driver",description:"Provides TypeScript support by dynamically generating a",source:"@site/docs/drivers/typescript.mdx",slug:"/drivers/typescript",permalink:"/docs/drivers/typescript",editUrl:"https://github.com/beemojs/beemo/edit/master/website/docs/drivers/typescript.mdx",version:"current",sidebar_label:"TypeScript",sidebar:"docs",previous:{title:"Stylelint driver",permalink:"/docs/drivers/stylelint"},next:{title:"Webpack driver",permalink:"/docs/drivers/webpack"}},p=[{value:"Requirements",id:"requirements",children:[]},{value:"Events",id:"events",children:[]},{value:"Installation",id:"installation",children:[]},{value:"Integration",id:"integration",children:[]},{value:"Commands",id:"commands",children:[{value:"<code>sync-project-refs</code>",id:"sync-project-refs",children:[]}]}],b={toc:p};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Provides ",Object(i.b)("a",{parentName:"p",href:"https://github.com/microsoft/typescript"},"TypeScript")," support by dynamically generating a\n",Object(i.b)("inlineCode",{parentName:"p"},"tsconfig.json")," config file."),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"If using workspaces, the driver will assume and use project references, by injecting ",Object(i.b)("inlineCode",{parentName:"p"},"references"),"\ninto the root config automatically, and separating compiler options into a ",Object(i.b)("inlineCode",{parentName:"p"},"tsconfig.options.json"),"\nfile.")),Object(i.b)("h2",{id:"requirements"},"Requirements"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"TypeScript ^4.0.0")),Object(i.b)("h2",{id:"events"},"Events"),Object(i.b)("p",null,"Can be listened to on the ",Object(i.b)("inlineCode",{parentName:"p"},"TypeScriptDriver")," instance."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Event"),Object(i.b)("th",{parentName:"tr",align:null},"Arguments"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"onCreateProjectConfigFile")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"path: Path, config: TypeScriptConfig, isTests: boolean")),Object(i.b)("td",{parentName:"tr",align:null},"Called before a workspace package config file is written when using project references.")))),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)("p",null,"In your configuration module, install the driver and TypeScript."),Object(i.b)(o.a,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"NPM",value:"npm"}],mdxType:"Tabs"},Object(i.b)(c.a,{value:"yarn",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"yarn add @beemo/driver-typescript typescript\n"))),Object(i.b)(c.a,{value:"npm",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"npm install @beemo/driver-typescript typescript\n")))),Object(i.b)("p",null,"Create a file at ",Object(i.b)("inlineCode",{parentName:"p"},"configs/typescript.ts")," (or ",Object(i.b)("inlineCode",{parentName:"p"},"js"),") in which to house your TypeScript configuration."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="configs/typescript.ts"',title:'"configs/typescript.ts"'},"import { TypeScriptConfig } from '@beemo/driver-typescript';\n\nconst config: TypeScriptConfig = {\n  compilerOptions: {\n    strict: true,\n  },\n  // ...\n};\n\nexport default config;\n")),Object(i.b)("h2",{id:"integration"},"Integration"),Object(i.b)("p",null,"In your consuming project, enable the driver by adding ",Object(i.b)("inlineCode",{parentName:"p"},"typescript")," to your ",Object(i.b)("inlineCode",{parentName:"p"},"drivers")," config."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts",metastring:'title=".config/beemo.ts"',title:'".config/beemo.ts"'},"import { BeemoConfig } from '@beemo/core';\n\nconst config: BeemoConfig = {\n  module: '<config-module>',\n  drivers: ['typescript'],\n};\n\nexport default config;\n")),Object(i.b)("h2",{id:"commands"},"Commands"),Object(i.b)("h3",{id:"sync-project-refs"},Object(i.b)("inlineCode",{parentName:"h3"},"sync-project-refs")),Object(i.b)("p",null,"Managing ",Object(i.b)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/project-references.html"},"project references"),"\nmanually can be tedious, and honestly, quite hard. Beemo mitigates this by automating the creation\nof ",Object(i.b)("inlineCode",{parentName:"p"},"tsconfig.json")," files, with correct project references (based on package dependencies), in every\nworkspace package."),Object(i.b)("p",null,"Run the following command in your project root to make use of this."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"beemo typescript:sync-project-refs\n")),Object(i.b)("p",null,"By default, the config will compile a ",Object(i.b)("inlineCode",{parentName:"p"},"src")," folder into a ",Object(i.b)("inlineCode",{parentName:"p"},"lib")," folder, while including a local and\nglobal ",Object(i.b)("inlineCode",{parentName:"p"},"types")," folder. A ",Object(i.b)("inlineCode",{parentName:"p"},"tests")," folder will receive a custom config file, which type checks the\nfolder but does not compile. A represenation of this is as follows:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"packages/\n  foo/\n    src/\n    tsconfig.json # Created that compiles src/ to lib/\n  bar\n    src/\n    types/ # Local types folder\n    tsconfig.json # Created that includes types/ folder\n  baz\n    src/\n    tests/\n      tsconfig.json # Created for tests only\n    tsconfig.json\ntypes/ # Global types folder\ntsconfig.json # Created with refs that point to each package\n")),Object(i.b)("p",null,"To customize this process, the following options are available."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"buildFolder")," (",Object(i.b)("inlineCode",{parentName:"li"},"string"),") - Name of output directory relative to package root. Defaults to ",Object(i.b)("inlineCode",{parentName:"li"},"lib"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"declarationOnly")," (",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),") - Only emit declaration files for all packages instead of source\nfiles. Defaults to ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"globalTypes")," (",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),") - Include global types defined in the root (usually cwd). Defaults to\n",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"srcFolder")," (",Object(i.b)("inlineCode",{parentName:"li"},"string"),") - Name of source directory relative to package root. Defaults to ",Object(i.b)("inlineCode",{parentName:"li"},"src"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"testsFolder")," (",Object(i.b)("inlineCode",{parentName:"li"},"string"),") - Name of tests directory relative to package root. Defaults to ",Object(i.b)("inlineCode",{parentName:"li"},"tests"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"typesFolder")," (",Object(i.b)("inlineCode",{parentName:"li"},"string"),") - Name of local and global types directory. Defaults to ",Object(i.b)("inlineCode",{parentName:"li"},"types"),".")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts",metastring:'title=".config/beemo.ts"',title:'".config/beemo.ts"'},"import { BeemoConfig } from '@beemo/core';\n\nconst config: BeemoConfig = {\n  module: '<config-module>',\n  drivers: [\n    [\n      'typescript',\n      {\n        globalTypes: true,\n        testsFolder: 'test',\n      },\n    ],\n  ],\n};\n\nexport default config;\n")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"If your tests are co-located with your source files, the tests specific ",Object(i.b)("inlineCode",{parentName:"p"},"tsconfig.json")," file will\nbe skipped.")))}u.isMDXComponent=!0}}]);