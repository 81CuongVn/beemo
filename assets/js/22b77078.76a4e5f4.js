(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[207],{5318:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(7378);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),f=i,m=d["".concat(u,".").concat(f)]||d[f]||c[f]||a;return r?n.createElement(m,o(o({ref:t},p),{},{components:r})):n.createElement(m,o({ref:t},p))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6827:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return l},metadata:function(){return u},toc:function(){return s},default:function(){return c}});var n=r(9603),i=r(120),a=(r(7378),r(5318)),o=["components"],l={title:"Driver usage"},u={unversionedId:"driver",id:"driver",isDocsHomePage:!1,title:"Driver usage",description:"A driver is a pluggable interface for an individual development or build tool. It provides a custom",source:"@site/docs/driver.md",sourceDirName:".",slug:"/driver",permalink:"/docs/driver",editUrl:"https://github.com/beemojs/beemo/edit/master/website/docs/driver.md",version:"current",frontMatter:{title:"Driver usage"},sidebar:"docs",previous:{title:"Consumer setup",permalink:"/docs/consumer"},next:{title:"Babel driver",permalink:"/docs/drivers/babel"}},s=[{value:"Config strategies",id:"config-strategies",children:[]},{value:"Output strategies",id:"output-strategies",children:[]},{value:"Creating a driver",id:"creating-a-driver",children:[]}],p={toc:s};function c(e){var t=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A driver is a pluggable interface for an individual development or build tool. It provides a custom\nimplementation for interoperability with the primary Beemo process."),(0,a.kt)("h2",{id:"config-strategies"},"Config strategies"),(0,a.kt)("p",null,"Each driver is designed and built differently, as is their configuration patterns. To work around\nthis, multiple strategies are in play when generating a config file at the root."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Created config")," - The config file is dynamically generated from the configuration module's\nsource config file. Typically written with ",(0,a.kt)("inlineCode",{parentName:"li"},"JSON.stringify()"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Referenced config")," - The config file references the configuration module's source config file\nusing ",(0,a.kt)("inlineCode",{parentName:"li"},"require()"),". Typically required for complex files (contains class instances, etc), like\nWebpack. ",(0,a.kt)("em",{parentName:"li"},"Note:")," When referencing, the ",(0,a.kt)("inlineCode",{parentName:"li"},"process.beemo")," variable is not available."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Copied config")," - The config file is copied as is from the configuration module's source config\nfile."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Template created config")," - The config is dynamically generated from the cusomer using a custom\ntemplate function. This template controls both the config file contents and destination path."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Native config")," - Uses the native configuration strategy defined for the driver."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"No config")," - Does nothing. Requires the consumer to create a local config file.")),(0,a.kt)("p",null,"The default strategies for each tool are as follows:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Strategy"),(0,a.kt)("th",{parentName:"tr",align:null},"Driver"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Created"),(0,a.kt)("td",{parentName:"tr",align:null},"Babel, ESLint, Flow, Jest, Lerna, Mocha, Prettier, Stylelint, TypeScript")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Referenced"),(0,a.kt)("td",{parentName:"tr",align:null},"Rollup, Webpack")))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default strategies can be overwritten with a driver's ",(0,a.kt)("inlineCode",{parentName:"p"},"configStrategy")," option.")),(0,a.kt)("h2",{id:"output-strategies"},"Output strategies"),(0,a.kt)("p",null,"Since Beemo executes drivers in a sub-process, we offer multiple strategies on how to display the\ndriver's output."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Buffered")," - Driver output will be buffered and hidden until the Beemo process completes. Upon\ncompletion, the buffered output will be logged ",(0,a.kt)("em",{parentName:"li"},"after")," Beemo's output."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Piped")," - Driver output will be logged ",(0,a.kt)("em",{parentName:"li"},"above")," and in parallel with Beemo's output."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Streamed")," - Beemo's output will be hidden and the driver output will be logged instead. This\noutput is akin to running the driver outside of Beemo."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"No output")," - Neither Beemo's or the driver's output will be displayed.")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Default strategy is to buffer, but this can be customized per driver with the ",(0,a.kt)("inlineCode",{parentName:"p"},"outputStrategy"),"\noption, or for all drivers through the ",(0,a.kt)("inlineCode",{parentName:"p"},"execute.output")," config setting.")),(0,a.kt)("h2",{id:"creating-a-driver"},"Creating a driver"),(0,a.kt)("p",null,"Will be available after release!"))}c.isMDXComponent=!0}}]);