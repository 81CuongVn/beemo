(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[727],{5318:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7378);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=a,b=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return t?r.createElement(b,o(o({ref:n},p),{},{components:t})):r.createElement(b,o({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},517:function(e,n,t){"use strict";var r=t(7378);n.Z=function(e){var n=e.children,t=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}},6359:function(e,n,t){"use strict";t.d(n,{Z:function(){return p}});var r=t(7378),a=t(4309),i=t(8944),o="tabItem_c0e5",l="tabItemActive_28AG";var s=37,c=39;var p=function(e){var n=e.lazy,t=e.block,p=e.defaultValue,u=e.values,d=e.groupId,m=e.className,b=(0,a.Z)(),f=b.tabGroupChoices,g=b.setTabGroupChoices,k=(0,r.useState)(p),v=k[0],h=k[1],y=r.Children.toArray(e.children),N=[];if(null!=d){var w=f[d];null!=w&&w!==v&&u.some((function(e){return e.value===w}))&&h(w)}var C=function(e){var n=e.currentTarget,t=N.indexOf(n),r=u[t].value;h(r),null!=d&&(g(d,r),setTimeout((function(){var e,t,r,a,i,o,s,c;(e=n.getBoundingClientRect(),t=e.top,r=e.left,a=e.bottom,i=e.right,o=window,s=o.innerHeight,c=o.innerWidth,t>=0&&i<=c&&a<=s&&r>=0)||(n.scrollIntoView({block:"center",behavior:"smooth"}),n.classList.add(l),setTimeout((function(){return n.classList.remove(l)}),2e3))}),150))},j=function(e){var n,t;switch(e.keyCode){case c:var r=N.indexOf(e.target)+1;t=N[r]||N[0];break;case s:var a=N.indexOf(e.target)-1;t=N[a]||N[N.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},m)},u.map((function(e){var n=e.value,t=e.label;return r.createElement("li",{role:"tab",tabIndex:v===n?0:-1,"aria-selected":v===n,className:(0,i.Z)("tabs__item",o,{"tabs__item--active":v===n}),key:n,ref:function(e){return N.push(e)},onKeyDown:j,onFocus:C,onClick:C},t)}))),n?(0,r.cloneElement)(y.filter((function(e){return e.props.value===v}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},y.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==v})}))))}},4956:function(e,n,t){"use strict";var r=(0,t(7378).createContext)(void 0);n.Z=r},4309:function(e,n,t){"use strict";var r=t(7378),a=t(4956);n.Z=function(){var e=(0,r.useContext)(a.Z);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},2906:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var r=t(9603),a=t(120),i=(t(7378),t(5318)),o=t(6359),l=t(517),s={title:"Provider setup"},c={unversionedId:"provider",id:"provider",isDocsHomePage:!1,title:"Provider setup",description:"To begin, create and clone a new repository on GitHub (or another VCS). This repository will be",source:"@site/docs/provider.mdx",sourceDirName:".",slug:"/provider",permalink:"/docs/provider",editUrl:"https://github.com/beemojs/beemo/edit/master/website/docs/provider.mdx",version:"current",frontMatter:{title:"Provider setup"},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/"},next:{title:"Consumer setup",permalink:"/docs/consumer"}},p=[{value:"Installing Beemo",id:"installing-beemo",children:[]},{value:"Drivers",id:"drivers",children:[{value:"Config resolution",id:"config-resolution",children:[]}]},{value:"Scripts",id:"scripts",children:[{value:"Script resolution",id:"script-resolution",children:[]}]},{value:"Publishing",id:"publishing",children:[]}],u={toc:p};function d(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,'To begin, create and clone a new repository on GitHub (or another VCS). This repository will be\nknown as your "configuration module" going forward. I suggest naming it ',(0,i.kt)("inlineCode",{parentName:"p"},"dev"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"dev-configs"),", or\n",(0,i.kt)("inlineCode",{parentName:"p"},"build-tools"),", etc, as it's straight forward, easy to understand, and defines intent."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone git@github.com:<username>/dev.git\ncd dev/\n")),(0,i.kt)("p",null,"Once cloned, initialize a new NPM package, and provide the package name with a username scope, like\n",(0,i.kt)("inlineCode",{parentName:"p"},"@beemo/dev"),". Why a scope? Because we don't want to clutter NPM with common named packages. It also\navoids collisions and easily announces ownership."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm init --scope=<username>\n")),(0,i.kt)("p",null,"Enter ",(0,i.kt)("inlineCode",{parentName:"p"},"0.0.0")," for the version, and whatever you want for the remaining questions."),(0,i.kt)("h2",{id:"installing-beemo"},"Installing Beemo"),(0,i.kt)("p",null,"Now that we have a repository, we can install and setup Beemo."),(0,i.kt)(o.Z,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"NPM",value:"npm"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @beemo/core @beemo/cli\n"))),(0,i.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @beemo/core @beemo/cli\n")))),(0,i.kt)("p",null,'This will only install the core functionality. To support different developer tools like Babel,\nESLint, and Jest, we need to install packages known as "drivers"\n(',(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/search?q=beemo-driver"},"view all available drivers"),")."),(0,i.kt)(o.Z,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"NPM",value:"npm"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @beemo/driver-babel @babel/core\nyarn add @beemo/driver-eslint eslint\nyarn add @beemo/driver-jest jest\n"))),(0,i.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @beemo/driver-babel @babel/core\nnpm install @beemo/driver-eslint eslint\nnpm install @beemo/driver-jest jest\n")))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Drivers and their peer dependencies must be installed as production dependencies.")),(0,i.kt)("h2",{id:"drivers"},"Drivers"),(0,i.kt)("p",null,"For each driver you install, there should be an associated configuration file within a ",(0,i.kt)("inlineCode",{parentName:"p"},"configs/"),'\nfolder, named after the camel-cased package name (excluding "driver-"). Using the example above,\nwe\'d have the following:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"configs/\n  babel.ts\n  eslint.ts\n  jest.ts\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The benefit of Beemo is that we can avoid different tooling conventions and standardize on a\nsingle implementation. No more ",(0,i.kt)("inlineCode",{parentName:"p"},".foorc"),", ",(0,i.kt)("inlineCode",{parentName:"p"},".foorc.js"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},".foorc.json")," nonsense. Just\n",(0,i.kt)("inlineCode",{parentName:"p"},"configs/<driver>.ts")," (and .js too).")),(0,i.kt)("p",null,"Each configuration file should return an object. Easy enough."),(0,i.kt)(o.Z,{groupId:"format",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"ts",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="configs/babel.ts"',title:'"configs/babel.ts"'},"import { BabelConfig } from '@beemo/driver-babel';\n\nconst config: BabelConfig = {\n  presets: [\n    [\n      '@babel/preset-env',\n      {\n        targets: { node: 'current' },\n      },\n    ],\n  ],\n};\n\nexport default config;\n"))),(0,i.kt)(l.Z,{value:"js",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="configs/babel.js"',title:'"configs/babel.js"'},"module.exports = {\n  presets: [\n    [\n      '@babel/preset-env',\n      {\n        targets: { node: 'current' },\n      },\n    ],\n  ],\n};\n")))),(0,i.kt)("p",null,"You can access the command line args, the pipeline context, and the current\n",(0,i.kt)("a",{parentName:"p",href:"/docs/tool"},"tool instance")," on ",(0,i.kt)("inlineCode",{parentName:"p"},"process.beemo")," (which allows for runtime conditional logic). For\nexample, if ",(0,i.kt)("inlineCode",{parentName:"p"},"--react")," was passed, we can enable the React preset."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="configs/babel.ts"',title:'"configs/babel.ts"'},"import { BabelConfig } from '@beemo/driver-babel';\n\nconst { context, tool } = process.beemo;\nconst presets: BabelConfig['presets'] = [\n  [\n    '@babel/preset-env',\n    {\n      targets: { node: 'current' },\n    },\n  ],\n];\n\nif (context.args.react) {\n  presets.push('@babel/preset-react');\n}\n\nexport default {\n  presets,\n};\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Command line arguments are parsed into an object using\n",(0,i.kt)("a",{parentName:"p",href:"https://boostlib.dev/docs/args"},"@boost/args"),".")),(0,i.kt)("h3",{id:"config-resolution"},"Config resolution"),(0,i.kt)("p",null,"Configuration files are looked for and resolved in the following order:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"configs/<driver>.ts")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"configs/<driver>.js")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"src/configs/<driver>.ts")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"lib/configs/<driver>.js"))),(0,i.kt)("h2",{id:"scripts"},"Scripts"),(0,i.kt)("p",null,"Beemo supports executing custom scripts found within your configuration module. To utilize a script,\ncreate a file (in PascalCase) within the ",(0,i.kt)("inlineCode",{parentName:"p"},"scripts/")," folder, extend the ",(0,i.kt)("inlineCode",{parentName:"p"},"Script")," class provided by\nBeemo, and define the ",(0,i.kt)("inlineCode",{parentName:"p"},"execute()")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"parse()")," methods."),(0,i.kt)(o.Z,{groupId:"format",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"ts",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="scripts/InitProject.ts"',title:'"scripts/InitProject.ts"'},"import { Arguments, ParserOptions, Script, ScriptContext } from '@beemo/core';\n\ninterface InitProjectOptions {\n  dryRun: boolean;\n}\n\nclass InitProjectScript extends Script<InitProjectOptions> {\n  readonly name = 'init-project';\n\n  parse(): ParserOptions<InitProjectOptions> {\n    return {\n      dryRun: {\n        description: 'Execute a dry run',\n        type: 'boolean',\n      },\n    };\n  }\n\n  execute(context: ScriptContext, args: Arguments<InitProjectOptions>) {\n    if (args.dryRun) {\n      // Do something\n    }\n  }\n}\n\nexport default () => new InitProjectScript();\n"))),(0,i.kt)(l.Z,{value:"js",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="scripts/InitProject.js"',title:'"scripts/InitProject.js"'},"const { Script } = require('@beemo/core');\n\nclass InitProjectScript extends Script {\n  name = 'init-project';\n\n  parse() {\n    return {\n      dryRun: {\n        description: 'Execute a dry run',\n        type: 'boolean',\n      },\n    };\n  }\n\n  execute(context, args) {\n    if (args.dryRun) {\n      // Do something\n    }\n  }\n}\n\nmodule.exports = () => new InitProjectScript();\n")))),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"parse()")," method is optional but can be used to define parsing rules for CLI options (powered by\n",(0,i.kt)("a",{parentName:"p",href:"https://boostlib.dev/docs/args"},"@boost/args"),"). If no rules are provided, default parsing rules will\nbe used."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"execute()")," method is required and is triggered when the ",(0,i.kt)("inlineCode",{parentName:"p"},"beemo run-script")," command is ran. This\nmethod receives the current pipeline context as the 1st argument and options (parsed with ",(0,i.kt)("inlineCode",{parentName:"p"},"parse()"),")\nas the 2nd argument. The ",(0,i.kt)("a",{parentName:"p",href:"/docs/tool"},"Beemo Tool instance")," is available under ",(0,i.kt)("inlineCode",{parentName:"p"},"this.tool"),"."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Returning a promise in ",(0,i.kt)("inlineCode",{parentName:"p"},"execute()")," is preferred.")),(0,i.kt)("h3",{id:"script-resolution"},"Script resolution"),(0,i.kt)("p",null,"Script files are looked for and resolved in the following order:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"scripts/<script>.ts")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"scripts/<script>.js")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"src/scripts/<script>.ts")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"lib/scripts/<script>.js")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@beemo/script-<script>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"beemo-script-<script>"))),(0,i.kt)("h2",{id:"publishing"},"Publishing"),(0,i.kt)("p",null,"Now that Beemo and its drivers are installed, let's move forward by publishing your configuration\nmodule to NPM with public access. This is mandatory if using a scope."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm version minor\nnpm publish --access=public\n")),(0,i.kt)("p",null,"You can also set the access in ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "publishConfig": {\n    "access": "public"\n  }\n}\n')))}d.isMDXComponent=!0},8944:function(e,n,t){"use strict";function r(e){var n,t,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=r(e[n]))&&(a&&(a+=" "),a+=t);else for(n in e)e[n]&&(a&&(a+=" "),a+=n);return a}function a(){for(var e,n,t=0,a="";t<arguments.length;)(e=arguments[t++])&&(n=r(e))&&(a&&(a+=" "),a+=n);return a}t.d(n,{Z:function(){return a}})}}]);