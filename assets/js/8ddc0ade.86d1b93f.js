(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{102:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=i.a.createContext({}),b=function(e){var t=i.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=b(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=b(n),m=a,d=p["".concat(o,".").concat(m)]||p[m]||u[m]||r;return n?i.a.createElement(d,l(l({ref:t},s),{},{components:n})):i.a.createElement(d,l({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<r;s++)o[s]=n[s];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},103:function(e,t,n){"use strict";function a(e){var t,n,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(i&&(i+=" "),i+=n);else for(t in e)e[t]&&(i&&(i+=" "),i+=t);return i}t.a=function(){for(var e,t,n=0,i="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(i&&(i+=" "),i+=t);return i}},104:function(e,t,n){"use strict";var a=n(0),i=n(105);t.a=function(){var e=Object(a.useContext)(i.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},105:function(e,t,n){"use strict";var a=n(0),i=Object(a.createContext)(void 0);t.a=i},106:function(e,t,n){"use strict";var a=n(0),i=n.n(a),r=n(104),o=n(103),l=n(56),c=n.n(l);var s=37,b=39;t.a=function(e){var t=e.lazy,n=e.block,l=e.defaultValue,p=e.values,u=e.groupId,m=e.className,d=Object(r.a)(),f=d.tabGroupChoices,g=d.setTabGroupChoices,j=Object(a.useState)(l),O=j[0],h=j[1],v=a.Children.toArray(e.children),N=[];if(null!=u){var y=f[u];null!=y&&y!==O&&p.some((function(e){return e.value===y}))&&h(y)}var C=function(e){var t=e.target,n=N.indexOf(t),a=v[n].props.value;h(a),null!=u&&(g(u,a),setTimeout((function(){var e,n,a,i,r,o,l,s;(e=t.getBoundingClientRect(),n=e.top,a=e.left,i=e.bottom,r=e.right,o=window,l=o.innerHeight,s=o.innerWidth,n>=0&&r<=s&&i<=l&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(c.a.tabItemActive),setTimeout((function(){return t.classList.remove(c.a.tabItemActive)}),2e3))}),150))},w=function(e){var t,n;switch(e.keyCode){case b:var a=N.indexOf(e.target)+1;n=N[a]||N[0];break;case s:var i=N.indexOf(e.target)-1;n=N[i]||N[N.length-1]}null===(t=n)||void 0===t||t.focus()};return i.a.createElement("div",{className:"tabs-container"},i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":n},m)},p.map((function(e){var t=e.value,n=e.label;return i.a.createElement("li",{role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,className:Object(o.a)("tabs__item",c.a.tabItem,{"tabs__item--active":O===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:w,onFocus:C,onClick:C},n)}))),t?Object(a.cloneElement)(v.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):i.a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}},107:function(e,t,n){"use strict";var a=n(0),i=n.n(a);t.a=function(e){var t=e.children,n=e.hidden,a=e.className;return i.a.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},89:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return u}));var a=n(3),i=n(7),r=(n(0),n(102)),o=n(106),l=n(107),c={title:"Consumer setup"},s={unversionedId:"consumer",id:"consumer",isDocsHomePage:!1,title:"Consumer setup",description:"Now that you have a configuration module, we can integrate it downstream into a project. But first,",source:"@site/docs/consumer.mdx",slug:"/consumer",permalink:"/docs/consumer",editUrl:"https://github.com/beemojs/beemo/edit/master/website/docs/consumer.mdx",version:"current",sidebar:"docs",previous:{title:"Provider setup",permalink:"/docs/provider"},next:{title:"Driver usage",permalink:"/docs/driver"}},b=[{value:"Settings",id:"settings",children:[]},{value:"Using drivers",id:"using-drivers",children:[{value:"Options",id:"options",children:[]}]},{value:"Executing drivers",id:"executing-drivers",children:[{value:"CLI options",id:"cli-options",children:[]},{value:"Watch mode",id:"watch-mode",children:[]},{value:"Live mode",id:"live-mode",children:[]}]},{value:"Executing scripts",id:"executing-scripts",children:[]},{value:"Creating config files",id:"creating-config-files",children:[]},{value:"Overriding configs",id:"overriding-configs",children:[]},{value:"Custom configs with templates",id:"custom-configs-with-templates",children:[]}],p={toc:b};function u(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Now that you have a configuration module, we can integrate it downstream into a project. But first,\ngo ahead and delete all the old config files and dependencies in each project (if they exist), as\nall that logic should now be housed in your configuration module."),Object(r.b)("p",null,"Once you have a clean slate, install your configuration module, and BOOM, it's as easy as that. No\nmore development dependency hell, just a single dependency."),Object(r.b)(o.a,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"NPM",value:"npm"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"yarn",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"yarn add <config-module> --dev\n"))),Object(r.b)(l.a,{value:"npm",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"npm install <config-module> --save-dev\n")))),Object(r.b)("p",null,"With that being said, create a ",Object(r.b)("inlineCode",{parentName:"p"},".config/beemo.ts")," file (or ",Object(r.b)("inlineCode",{parentName:"p"},".js"),", ",Object(r.b)("inlineCode",{parentName:"p"},".json"),", ",Object(r.b)("inlineCode",{parentName:"p"},".yaml"),") in your project\nroot with a ",Object(r.b)("inlineCode",{parentName:"p"},"module")," property that matches the name of your configuration module, or another\nthird-party module (if you don't want to manage your own provider)."),Object(r.b)(o.a,{groupId:"format",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"JSON",value:"json"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"ts",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts",metastring:'title=".config/beemo.ts"',title:'".config/beemo.ts"'},"import { BeemoConfig } from '@beemo/core';\n\nconst config: BeemoConfig = {\n  module: '<config-module>',\n};\n\nexport default config;\n"))),Object(r.b)(l.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:'title=".config/beemo.js"',title:'".config/beemo.js"'},"module.exports = {\n  module: '<config-module>',\n};\n"))),Object(r.b)(l.a,{value:"json",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json",metastring:'title=".config/beemo.json"',title:'".config/beemo.json"'},'{\n  "module": "<config-module>"\n}\n')))),Object(r.b)("h3",{id:"settings"},"Settings"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"module")," (",Object(r.b)("inlineCode",{parentName:"li"},"string"),") - Name of your configuration module."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"configure.cleanup")," (",Object(r.b)("inlineCode",{parentName:"li"},"boolean"),") - Remove generated config files after execution. Defaults to\n",Object(r.b)("inlineCode",{parentName:"li"},"false"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"configure.parallel")," (",Object(r.b)("inlineCode",{parentName:"li"},"boolean"),") - Create configuration files in parallel. Defaults to ",Object(r.b)("inlineCode",{parentName:"li"},"true"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"execute.concurrency")," (",Object(r.b)("inlineCode",{parentName:"li"},"number"),") - Number of builds to run in parallel. Defaults to the number of\nCPUs."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"execute.graph")," (",Object(r.b)("inlineCode",{parentName:"li"},"boolean"),") - Prioritize workspace builds based on\n",Object(r.b)("a",{parentName:"li",href:"/docs/workspaces#priority-packages"},"dependency graph"),". Defaults to ",Object(r.b)("inlineCode",{parentName:"li"},"true"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"drivers")," (",Object(r.b)("inlineCode",{parentName:"li"},"string[] | object"),") - Drivers to enable for the consumer."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"scripts")," (",Object(r.b)("inlineCode",{parentName:"li"},"string[] | object"),") - Scripts to enable for the consumer."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"settings")," (",Object(r.b)("inlineCode",{parentName:"li"},"object"),") - Custom settings specific to your project that can easily be referenced.")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Periods denote nested objects.")),Object(r.b)("h2",{id:"using-drivers"},"Using drivers"),Object(r.b)("p",null,"Driver dependencies may have been installed in your configuration module, but that does not make\nthem available to the current project, as not all drivers will always be necessary. To enable\ndrivers per project, a ",Object(r.b)("inlineCode",{parentName:"p"},"drivers")," property must be defined."),Object(r.b)("p",null,"This property accepts an array of strings/tuples or objects, with the names of each driver you want\nto enable. For example, if we want to use Babel, ESLint, and Jest, we would have the following."),Object(r.b)(o.a,{groupId:"format",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"ts",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts",metastring:'title=".config/beemo.ts"',title:'".config/beemo.ts"'},"import { BeemoConfig } from '@beemo/core';\n\nconst config: BeemoConfig = {\n  module: '<config-module>',\n  drivers: [\n    'babel',\n    'eslint',\n    [\n      'jest',\n      {\n        env: { NODE_ENV: 'test' },\n      },\n    ],\n  ],\n};\n\nexport default config;\n"))),Object(r.b)(l.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:'title=".config/beemo.js"',title:'".config/beemo.js"'},"module.exports = {\n  module: '<config-module>',\n  drivers: [\n    'babel',\n    'eslint',\n    [\n      'jest',\n      {\n        env: { NODE_ENV: 'test' },\n      },\n    ],\n  ],\n};\n")))),Object(r.b)("p",null,"Furthermore, drivers can be configured with options by using an object. If a driver does not require\noptions, either pass an empty object, or a boolean ",Object(r.b)("inlineCode",{parentName:"p"},"true"),"."),Object(r.b)(o.a,{groupId:"format",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"ts",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts",metastring:'title=".config/beemo.ts"',title:'".config/beemo.ts"'},"import { BeemoConfig } from '@beemo/core';\n\nconst config: BeemoConfig = {\n  module: '<config-module>',\n  drivers: {\n    babel: true,\n    eslint: {\n      args: ['--color', '--report-unused-disable-directives'],\n    },\n    jest: {\n      env: { NODE_ENV: 'test' },\n    },\n  },\n};\n\nexport default config;\n"))),Object(r.b)(l.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:'title=".config/beemo.js"',title:'".config/beemo.js"'},"module.exports = {\n  module: '<config-module>',\n  drivers: {\n    babel: true,\n    eslint: {\n      args: ['--color', '--report-unused-disable-directives'],\n    },\n    jest: {\n      env: { NODE_ENV: 'test' },\n    },\n  },\n};\n")))),Object(r.b)("p",null,"Options can also be set through the ",Object(r.b)("a",{parentName:"p",href:"/docs/events"},"bootstrap and event system"),"."),Object(r.b)("h3",{id:"options"},"Options"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"args")," (",Object(r.b)("inlineCode",{parentName:"li"},"string[]"),") - Arguments to always pass when executing the driver binary."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"dependencies")," (",Object(r.b)("inlineCode",{parentName:"li"},"string[]"),") - Other drivers that are required for this driver to run."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"env")," (",Object(r.b)("inlineCode",{parentName:"li"},"object"),") - Environment variables to pass when executing the driver binary with\n",Object(r.b)("a",{parentName:"li",href:"https://github.com/sindresorhus/execa"},"execa"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"expandGlobs")," (",Object(r.b)("inlineCode",{parentName:"li"},"boolean"),") - Controls whether or not glob patterns in args are automatically\nexpanded before being passed to the driver binary. Defaults to ",Object(r.b)("inlineCode",{parentName:"li"},"true"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"strategy")," (",Object(r.b)("inlineCode",{parentName:"li"},"create | copy | reference | template | native | none"),") - Type of\n",Object(r.b)("a",{parentName:"li",href:"/docs/driver#config-strategies"},"strategy")," to use when generating a config file. Default is\ndifferent per driver."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"template")," (",Object(r.b)("inlineCode",{parentName:"li"},"string"),") - File path to a template function for generating custom config files and\npaths. Is required when ",Object(r.b)("inlineCode",{parentName:"li"},"strategy"),' is "template".')),Object(r.b)("h2",{id:"executing-drivers"},"Executing drivers"),Object(r.b)("p",null,"Now for the fun part, executing the driver! It's as simple as ",Object(r.b)("inlineCode",{parentName:"p"},"yarn beemo <driver>")," (or\n",Object(r.b)("inlineCode",{parentName:"p"},"npx beemo <driver>"),"). Once entered, this will initialize Beemo's pipeline, generate a configuration\nfile, execute the underlying driver binary, handle stdout and stderr output, cleanup after itself,\nand lastly, leave a beautiful message in your console."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"All arguments passed to Beemo are passed to the driver's underlying binary.")),Object(r.b)("p",null,"That being said, consistently remembering the correct commands and arguments to pass to ",Object(r.b)("inlineCode",{parentName:"p"},"yarn")," and\n",Object(r.b)("inlineCode",{parentName:"p"},"npx")," is tedious. So why not use scripts? Feel free to steal the following."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  "scripts": {\n    "build": "beemo babel ./src --out-dir ./lib",\n    "lint": "beemo eslint ./src ./tests",\n    "test": "beemo jest",\n    "format": "beemo prettier --write \\"./{src,tests}/**/*.{js,json,md}\\"",\n    "type": "beemo typescript"\n  }\n}\n')),Object(r.b)("h3",{id:"cli-options"},"CLI options"),Object(r.b)("p",null,"The following options are available when executing a driver."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"--concurrency")," (",Object(r.b)("inlineCode",{parentName:"li"},"number"),") - Number of builds to run in parallel. Defaults to the amount of CPUs."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"--[no-]graph")," (",Object(r.b)("inlineCode",{parentName:"li"},"bool"),") - Prioritize workspace builds based on\n",Object(r.b)("a",{parentName:"li",href:"/docs/workspaces#priority-packages"},"dependency graph"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"--stdio")," (",Object(r.b)("inlineCode",{parentName:"li"},"buffer | inherit | stream"),') - Control how the underlying driver output is displayed in\nthe console. Defaults to "buffer".',Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"buffer")," - Renders Beemo output using the defined reporter(s). Underlying driver output will be\nrendered on success or failure."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"inherit")," - Doesn't render Beemo output and instead streams the underlying driver output live."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"stream")," - A combination of ",Object(r.b)("inlineCode",{parentName:"li"},"buffer")," and ",Object(r.b)("inlineCode",{parentName:"li"},"inherit"),"."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"--workspaces")," (",Object(r.b)("inlineCode",{parentName:"li"},"string"),") - Execute the command in each ",Object(r.b)("a",{parentName:"li",href:"/docs/workspaces"},"workspace")," defined by\nthe pattern/value. Pass ",Object(r.b)("inlineCode",{parentName:"li"},"*")," to run in all workspaces.")),Object(r.b)("h3",{id:"watch-mode"},"Watch mode"),Object(r.b)("p",null,"If the underlying driver supports file watching, most commonly through a CLI option like ",Object(r.b)("inlineCode",{parentName:"p"},"-w")," or\n",Object(r.b)("inlineCode",{parentName:"p"},"--watch"),", Beemo will attempt to capture and pipe this output to your terminal."),Object(r.b)("h3",{id:"live-mode"},"Live mode"),Object(r.b)("p",null,"The Beemo console masks output of the underlying driver while it is executing. If you prefer to see\nthe driver output live, simply pass ",Object(r.b)("inlineCode",{parentName:"p"},"--stdio=stream")," or ",Object(r.b)("inlineCode",{parentName:"p"},"--stdio=inherit"),"."),Object(r.b)("h2",{id:"executing-scripts"},"Executing scripts"),Object(r.b)("p",null,"A script within your configuration module can be executed using ",Object(r.b)("inlineCode",{parentName:"p"},"yarn beemo run-script <name>")," (or\n",Object(r.b)("inlineCode",{parentName:"p"},"npx beemo run-script <name>"),"). The name of the script should be passed in kebab-case."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"All arguments passed to Beemo are passed to the script's ",Object(r.b)("inlineCode",{parentName:"p"},"run()")," method.")),Object(r.b)("h2",{id:"creating-config-files"},"Creating config files"),Object(r.b)("p",null,"Executing a driver will dynamically create a configuration file at runtime. If you'd like to create\nthe config manually outside of executing a driver, you can use the ",Object(r.b)("inlineCode",{parentName:"p"},"yarn beemo create-config")," (or\n",Object(r.b)("inlineCode",{parentName:"p"},"npx beemo create-config"),")."),Object(r.b)("p",null,"When no arguments are passed, it will create a config file for all enabled drivers (found in the\n",Object(r.b)("inlineCode",{parentName:"p"},"drivers")," setting). Otherwise, a config file will be created for each driver name passed as an\nargument."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"// All drivers\nyarn beemo create-config\n\n// Only Babel and Jest\nyarn beemo create-config babel jest\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"If a driver has a dependency on another driver, it will create a config file for the dependency as\nwell.")),Object(r.b)("h2",{id:"overriding-configs"},"Overriding configs"),Object(r.b)("p",null,"Your configuration module may now house and provide all configurations, but that doesn't mean it's\napplicable to ",Object(r.b)("em",{parentName:"p"},"all")," consuming projects. To accomodate this, Beemo supports overriding of driver\nconfig on a project-by-project basis through a local ",Object(r.b)("inlineCode",{parentName:"p"},".config/beemo/<driver>.(js|ts)")," file."),Object(r.b)(o.a,{groupId:"format",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"ts",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts",metastring:'title=".config/beemo/eslint.ts"',title:'".config/beemo/eslint.ts"'},"import { ESLintConfig } from '@beemo/driver-eslint';\n\nconst config: ESLintConfig = {\n  rules: {\n    'no-param-reassign': 0,\n  },\n};\n\nexport default config;\n"))),Object(r.b)(l.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:'title=".config/beemo/eslint.js"',title:'".config/beemo/eslint.js"'},"module.exports = {\n  rules: {\n    'no-param-reassign': 0,\n  },\n};\n")))),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Some dev tools support ",Object(r.b)("inlineCode",{parentName:"p"},"package.json")," overrides like this, but it's preferred to use the Beemo\napproach for interoperability.")),Object(r.b)("h2",{id:"custom-configs-with-templates"},"Custom configs with templates"),Object(r.b)("p",null,"Beemo provides sane defaults for all official drivers and attempts to standardize the configuration\nprocess as much as possible. However, it's not perfect, and may not work for all consumers. To\nmitigate this problem, each driver supports a template based strategy, in which a custom template\nfunction can be used to handle the config generation (custom merging, etc), and the destination file\npath."),Object(r.b)("p",null,"To use templates, set the driver ",Object(r.b)("inlineCode",{parentName:"p"},"strategy"),' option to "template", and the ',Object(r.b)("inlineCode",{parentName:"p"},"template")," option to a\nfile path for the template function (relative to the ",Object(r.b)("inlineCode",{parentName:"p"},".config")," folder)."),Object(r.b)(o.a,{groupId:"format",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"ts",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts",metastring:'title=".config/beemo.ts"',title:'".config/beemo.ts"'},"import { BeemoConfig } from '@beemo/core';\n\nconst config: BeemoConfig = {\n  module: '<config-module>',\n  drivers: [\n    [\n      'eslint',\n      {\n        strategy: 'template',\n        template: './path/to/custom/template.ts',\n      },\n    ],\n  ],\n};\n\nexport default config;\n"))),Object(r.b)(l.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:'title=".config/beemo.js"',title:'".config/beemo.js"'},"module.exports = {\n  module: '<config-module>',\n  drivers: [\n    [\n      'eslint',\n      {\n        strategy: 'template',\n        template: './path/to/custom/template.ts',\n      },\n    ],\n  ],\n};\n")))),Object(r.b)("p",null,"The template is merely a function that receives a list of config objects from multiple sources, and\nmust return a single config object (or string), and an optional destination path. It also receives\nan options object with helpful information about the current process."),Object(r.b)("p",null,"To demonstrate the power of templates, let's write a custom template that generates a YAML\nconfiguration file for ESLint."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="./path/to/custom/template.ts"',title:'"./path/to/custom/template.ts"'},"import { yaml } from '@boost/common';\nimport { ConfigObject, ConfigTemplateResult, ConfigTemplateOptions } from '@beemo/core';\n\nexport default function customTemplate(\n  configs: ConfigObject[],\n  options: ConfigTemplateOptions,\n): ConfigTemplateResult {\n  // Manually merge the list of configs into a single config object\n  // using the rules of the driver, or ones unique to your project.\n  const config = mergeConfigs(configs);\n\n  // A template must return a `config` property, which can be an object\n  // that will be formatted as JSON/JS, or a string which will be written as-is.\n  // It can also return an optional `path` property, allowing the destination\n  // config file path to be customized.\n  return {\n    config: yaml.stringify(config),\n    path: options.context.cwd.append('.eslintrc.yaml'),\n  };\n}\n")),Object(r.b)("p",null,"The list of available options are:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"configModule")," (",Object(r.b)("inlineCode",{parentName:"li"},"string"),") - Name of the configuration module."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"consumerConfigPath")," (",Object(r.b)("inlineCode",{parentName:"li"},"Path | null"),") - Path to the driver's config file in the configuration\nmodule. For example, ",Object(r.b)("inlineCode",{parentName:"li"},"configs/eslint.ts"),". Is ",Object(r.b)("inlineCode",{parentName:"li"},"null")," if not found."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"context")," (",Object(r.b)("inlineCode",{parentName:"li"},"Context"),") - Current pipeline context."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"driver")," (",Object(r.b)("inlineCode",{parentName:"li"},"Driver"),") - Current instance for the driver being processed."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"driverConfigPath")," (",Object(r.b)("inlineCode",{parentName:"li"},"Path"),") - Path to the driver's default config file destination. For example,\n",Object(r.b)("inlineCode",{parentName:"li"},".eslintrc.js")," in the root."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"driverName")," (",Object(r.b)("inlineCode",{parentName:"li"},"string"),") - Name of the driver being processed. For example, ",Object(r.b)("inlineCode",{parentName:"li"},"eslint"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"providerConfigPath")," (",Object(r.b)("inlineCode",{parentName:"li"},"Path | null"),") - Path to the driver's config file in the current project.\nFor example, ",Object(r.b)("inlineCode",{parentName:"li"},".config/beemo/eslint.ts"),". Is ",Object(r.b)("inlineCode",{parentName:"li"},"null")," if not found."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"templatePath")," (",Object(r.b)("inlineCode",{parentName:"li"},"Path"),") - Path to the template file (itself)."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"tool")," (",Object(r.b)("inlineCode",{parentName:"li"},"Tool"),") - Current ",Object(r.b)("a",{parentName:"li",href:"/docs/tool"},"tool instance"),".")))}u.isMDXComponent=!0}}]);