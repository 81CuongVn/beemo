(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{100:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return j}));var a=n(0),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),d=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),p=d(n),u=a,j=p["".concat(i,".").concat(u)]||p[u]||m[u]||l;return n?r.a.createElement(j,o(o({ref:t},c),{},{components:n})):r.a.createElement(j,o({ref:t},c))}));function j(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var b in t)hasOwnProperty.call(t,b)&&(o[b]=t[b]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},96:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return d}));var a=n(3),r=n(7),l=(n(0),n(100)),i={title:"Event-driven tooling"},o={unversionedId:"events",id:"events",isDocsHomePage:!1,title:"Event-driven tooling",description:"What kind of tool would Beemo be without the ability to listen to events? A terrible one, and as",source:"@site/docs/events.md",slug:"/events",permalink:"/docs/events",editUrl:"https://github.com/beemojs/beemo/edit/master/website/docs/events.md",version:"current",sidebar:"docs",previous:{title:"Tool instance",permalink:"/docs/tool"},next:{title:"Scaffolding",permalink:"/docs/scaffolding"}},b=[{value:"Bootstrap resolution",id:"bootstrap-resolution",children:[]},{value:"Supported events",id:"supported-events",children:[{value:"Tool",id:"tool",children:[]},{value:"Driver",id:"driver",children:[]},{value:"Script",id:"script",children:[]}]},{value:"Type declarations",id:"type-declarations",children:[]}],c={toc:b};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"What kind of tool would Beemo be without the ability to listen to events? A terrible one, and as\nsuch, Beemo totally supports them! Events provide an easy mechanism for hooking into the lifecycle\nof a Beemo process."),Object(l.b)("p",null,"To begin, create an index file in your configuration module that exports a function, either as a\ndefault export or as a named ",Object(l.b)("inlineCode",{parentName:"p"},"bootstrap")," export. This function will receive a\n",Object(l.b)("a",{parentName:"p",href:"/docs/tool"},"Beemo Tool instance")," for the current process, in which listeners can be registered."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="index.ts"',title:'"index.ts"'},"import { Tool } from '@beemo/core';\n\nexport default function bootstrap(tool: Tool) {\n  // Add command line args to every execution\n  tool.driverRegistry.get('eslint').onBeforeExecute.listen((context) => {\n    context.addOptions(['--color', '--report-unused-disable-directives']);\n  });\n}\n")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"The bootstrap function supports async/await.")),Object(l.b)("h3",{id:"bootstrap-resolution"},"Bootstrap resolution"),Object(l.b)("p",null,"The bootstrap file is looked for and resolved in the following order relative to the configuration\nmodule."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"index.ts")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"index.js")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"src/index.ts")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"lib/index.js")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"main")," field in ",Object(l.b)("inlineCode",{parentName:"li"},"package.json"))),Object(l.b)("h2",{id:"supported-events"},"Supported events"),Object(l.b)("p",null,"The following list of events, and their arguments, can be listened to."),Object(l.b)("h3",{id:"tool"},"Tool"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Event"),Object(l.b)("th",{parentName:"tr",align:null},"Arguments"),Object(l.b)("th",{parentName:"tr",align:null},"Type"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onResolveDependencies")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: ConfigContext, drivers: Driver[]")),Object(l.b)("td",{parentName:"tr",align:null},"Normal"),Object(l.b)("td",{parentName:"tr",align:null},"Called after a list of ",Object(l.b)("inlineCode",{parentName:"td"},"Driver"),"s have been resolved in which to create configuration files.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onRunCreateConfig")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: ConfigContext, driverNames: string[]")),Object(l.b)("td",{parentName:"tr",align:null},"Normal"),Object(l.b)("td",{parentName:"tr",align:null},"Called before ",Object(l.b)("inlineCode",{parentName:"td"},"beemo create-config")," is ran.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onRunDriver")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: DriverContext, driver: Driver")),Object(l.b)("td",{parentName:"tr",align:null},"Normal"),Object(l.b)("td",{parentName:"tr",align:null},"Called before ",Object(l.b)("inlineCode",{parentName:"td"},"beemo <driver>")," is ran. ",Object(l.b)("em",{parentName:"td"},"Requires a scope of the driver name."))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onRunScript")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: ScriptContext")),Object(l.b)("td",{parentName:"tr",align:null},"Normal"),Object(l.b)("td",{parentName:"tr",align:null},"Called before ",Object(l.b)("inlineCode",{parentName:"td"},"beemo run-script <script>")," is ran. ",Object(l.b)("em",{parentName:"td"},"Requires a scope of the script name."))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onScaffold")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: ScaffoldContext, generator: string, action: string, name?: string")),Object(l.b)("td",{parentName:"tr",align:null},"Normal"),Object(l.b)("td",{parentName:"tr",align:null},"Called before templates are generated when scaffolding.")))),Object(l.b)("h3",{id:"driver"},"Driver"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Event"),Object(l.b)("th",{parentName:"tr",align:null},"Arguments"),Object(l.b)("th",{parentName:"tr",align:null},"Type"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onAfterExecute")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: DriverContext, response: unknown")),Object(l.b)("td",{parentName:"tr",align:null},"Concurrent"),Object(l.b)("td",{parentName:"tr",align:null},"Called after the driver has successfully been executed.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onBeforeExecute")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: DriverContext, argv: string[]")),Object(l.b)("td",{parentName:"tr",align:null},"Concurrent"),Object(l.b)("td",{parentName:"tr",align:null},"Called before the underlying ",Object(l.b)("inlineCode",{parentName:"td"},"Driver")," binary command is executed.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onCreateConfigFile")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: ConfigContext, path: Path, config: object")),Object(l.b)("td",{parentName:"tr",align:null},"Normal"),Object(l.b)("td",{parentName:"tr",align:null},"Called before the configuration file is written.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onCopyConfigFile")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: ConfigContext, path: Path, config: object")),Object(l.b)("td",{parentName:"tr",align:null},"Normal"),Object(l.b)("td",{parentName:"tr",align:null},"Called before the configuration file is copied from module.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onDeleteConfigFile")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: ConfigContext, path: Path")),Object(l.b)("td",{parentName:"tr",align:null},"Normal"),Object(l.b)("td",{parentName:"tr",align:null},"Called before the configuration file is deleted. Occurs during the ",Object(l.b)("inlineCode",{parentName:"td"},"cleanup")," phase.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onFailedExecute")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: DriverContext, error: Error")),Object(l.b)("td",{parentName:"tr",align:null},"Concurrent"),Object(l.b)("td",{parentName:"tr",align:null},"Called after the driver has failed to execute.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onLoadModuleConfig")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: ConfigContext, path: Path, config: object")),Object(l.b)("td",{parentName:"tr",align:null},"Normal"),Object(l.b)("td",{parentName:"tr",align:null},"Called after configuration has been loaded from the configuration module.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onLoadPackageConfig")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: ConfigContext, config: object")),Object(l.b)("td",{parentName:"tr",align:null},"Normal"),Object(l.b)("td",{parentName:"tr",align:null},"Called after configuration has been extracted from ",Object(l.b)("inlineCode",{parentName:"td"},"package.json"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onMergeConfig")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: ConfigContext, config: object")),Object(l.b)("td",{parentName:"tr",align:null},"Normal"),Object(l.b)("td",{parentName:"tr",align:null},"Called after multiple configuration sources have been merged into 1.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onReferenceConfigFile")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: ConfigContext, path: Path, config: object")),Object(l.b)("td",{parentName:"tr",align:null},"Normal"),Object(l.b)("td",{parentName:"tr",align:null},"Called before the configuration file is referenced.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onTemplateConfigFile")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: ConfigContext, path: Path, config: object/string")),Object(l.b)("td",{parentName:"tr",align:null},"Normal"),Object(l.b)("td",{parentName:"tr",align:null},"Called before the configuration file is written. The config is built using a consumer template, so can appear as an object or raw string (config file contents).")))),Object(l.b)("h3",{id:"script"},"Script"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Event"),Object(l.b)("th",{parentName:"tr",align:null},"Arguments"),Object(l.b)("th",{parentName:"tr",align:null},"Type"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onAfterExecute")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: ScriptContext, response: unknown")),Object(l.b)("td",{parentName:"tr",align:null},"Concurrent"),Object(l.b)("td",{parentName:"tr",align:null},"Called after the script has successfully been executed.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onBeforeExecute")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: ScriptContext, argv: string[]")),Object(l.b)("td",{parentName:"tr",align:null},"Concurrent"),Object(l.b)("td",{parentName:"tr",align:null},"Called before the ",Object(l.b)("inlineCode",{parentName:"td"},"Script#execute")," method is ran.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"onFailedExecute")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"context: ScriptContext, error: Error")),Object(l.b)("td",{parentName:"tr",align:null},"Concurrent"),Object(l.b)("td",{parentName:"tr",align:null},"Called after the script has failed to execute.")))),Object(l.b)("h2",{id:"type-declarations"},"Type declarations"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Driver")," - An instance of the\n",Object(l.b)("a",{parentName:"li",href:"https://github.com/beemojs/beemo/blob/master/packages/core/src/Driver.ts"},"Driver")," class."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Script")," - An instance of the\n",Object(l.b)("a",{parentName:"li",href:"https://github.com/beemojs/beemo/blob/master/packages/core/src/Script.ts"},"Script")," class."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Context"),", ",Object(l.b)("inlineCode",{parentName:"li"},"DriverContext"),", ",Object(l.b)("inlineCode",{parentName:"li"},"ScriptContext"),", ",Object(l.b)("inlineCode",{parentName:"li"},"ScaffoldContext")," -\n",Object(l.b)("a",{parentName:"li",href:"https://github.com/beemojs/beemo/tree/master/packages/core/src/contexts"},"Special objects")," passed\nthrough the entire execution process.")))}d.isMDXComponent=!0}}]);